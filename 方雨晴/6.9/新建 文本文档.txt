栈内存：有序存储
将堆栈内存视为有组织且高效的存储单元。它使用后进先出 (LIFO) 方法，这意味着最近添加的数据将首先被删除。内核是操作系统的核心组件，自动管理堆栈内存；我们不必担心分配和释放内存。当我们的程序运行时，它会自行处理。

内存：动态存储
堆内存，也称为动态内存，是内存分配的野孩子。程序员必须手动管理它。堆内存允许我们在程序执行期间随时分配和释放内存。它非常适合存储大型数据结构或大小事先未知的对象。   



深拷贝与浅拷贝

在编程中，深拷贝（Deep Copy）和浅拷贝（Shallow Copy）是两种常见的对象复制方法。它们之间的主要区别在于复制的深度和对原始对象内部结构的影响。

浅拷贝

浅拷贝创建一个新的对象，但只复制原始对象的基本数据类型字段或引用（地址），而不复制引用指向的对象。这意味着新对象和原始对象中的引用指向相同的对象。如果原始对象中的字段是基本数据类型，那么这些字段会被复制到新对象中，而如果字段是引用类型，则新对象和原始对象的对应字段将引用同一个对象。因此，对新对象所做的修改可能会影响到原始对象，因为它们共享相同的引用。

深拷贝

深拷贝创建一个新的对象，并且递归地复制原始对象的所有字段和引用指向的对象，而不仅仅是复制引用本身。深拷贝会递归复制整个对象结构，包括对象内部的对象，确保新对象和原始对象之间的所有关系都是独立的。这意味着对新对象所做的修改不会影响到原始对象，因为它们拥有彼此独立的副本

可以清楚地看到深拷贝和浅拷贝的区别。浅拷贝只复制对象的引用，而深拷贝则复制整个对象结构，使得新对象和原始对象完全独立